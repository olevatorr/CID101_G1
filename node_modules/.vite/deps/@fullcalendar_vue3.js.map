{
  "version": 3,
  "sources": ["../../@fullcalendar/vue3/src/options.ts", "../../@fullcalendar/vue3/src/FullCalendar.ts", "../../@fullcalendar/vue3/src/index.ts"],
  "sourcesContent": ["\r\nexport const OPTION_IS_COMPLEX: { [name: string]: boolean } = {\r\n  headerToolbar: true,\r\n  footerToolbar: true,\r\n  events: true,\r\n  eventSources: true,\r\n  resources: true\r\n}\r\n", "import { PropType, defineComponent, h, Fragment, Teleport, VNode } from 'vue'\r\nimport { Calendar, CalendarOptions } from '@fullcalendar/core'\r\nimport { CustomRenderingStore, CustomRendering } from '@fullcalendar/core/internal'\r\nimport { OPTION_IS_COMPLEX } from './options.js'\r\n\r\nconst FullCalendar = defineComponent({\r\n  props: {\r\n    options: Object as PropType<CalendarOptions>\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      renderId: 0,\r\n      customRenderingMap: new Map<string, CustomRendering<any>>()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getApi(): Calendar {\r\n      return getSecret(this).calendar\r\n    },\r\n\r\n    buildOptions(suppliedOptions: CalendarOptions | undefined): CalendarOptions {\r\n      return {\r\n        ...suppliedOptions,\r\n        customRenderingMetaMap: kebabToCamelKeys(this.$slots),\r\n        handleCustomRendering: getSecret(this).handleCustomRendering,\r\n      }\r\n    },\r\n  },\r\n\r\n  render() {\r\n    const customRenderingNodes: VNode[] = []\r\n\r\n    for (const customRendering of this.customRenderingMap.values()) {\r\n      customRenderingNodes.push(\r\n        h(CustomRenderingComponent, {\r\n          key: customRendering.id,\r\n          customRendering,\r\n        })\r\n      )\r\n    }\r\n\r\n    return h('div', {\r\n      // when renderId is changed, Vue will trigger a real-DOM async rerender, calling beforeUpdate/updated\r\n      attrs: { 'data-fc-render-id': this.renderId }\r\n    }, h(Fragment, customRenderingNodes)) // for containing CustomRendering keys\r\n  },\r\n\r\n  mounted() {\r\n    const customRenderingStore = new CustomRenderingStore<any>()\r\n    getSecret(this).handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore)\r\n\r\n    const calendarOptions = this.buildOptions(this.options)\r\n    const calendar = new Calendar(this.$el as HTMLElement, calendarOptions)\r\n    getSecret(this).calendar = calendar\r\n\r\n    calendar.render()\r\n    customRenderingStore.subscribe((customRenderingMap) => {\r\n      this.customRenderingMap = customRenderingMap // likely same reference, so won't rerender\r\n      this.renderId++ // force rerender\r\n      getSecret(this).needCustomRenderingResize = true\r\n    })\r\n  },\r\n\r\n  beforeUpdate() {\r\n    this.getApi().resumeRendering() // the watcher handlers paused it\r\n  },\r\n\r\n  updated() {\r\n    if (getSecret(this).needCustomRenderingResize) {\r\n      getSecret(this).needCustomRenderingResize = false\r\n      this.getApi().updateSize()\r\n    }\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.getApi().destroy()\r\n  },\r\n\r\n  watch: buildWatchers()\r\n})\r\n\r\nexport default FullCalendar\r\n\r\n// Custom Rendering\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nconst CustomRenderingComponent = defineComponent({\r\n  props: {\r\n    customRendering: Object as PropType<CustomRendering<any>>\r\n  },\r\n\r\n  render() {\r\n    const customRendering = this.customRendering!\r\n    const innerContent = typeof customRendering.generatorMeta === 'function' ?\r\n      customRendering.generatorMeta(customRendering.renderProps) : // vue-normalized slot function\r\n      customRendering.generatorMeta // probably a vue JSX node returned from content-inject func\r\n\r\n    return h(Teleport, { to: customRendering.containerEl }, innerContent)\r\n  }\r\n})\r\n\r\n// Internals\r\n// -------------------------------------------------------------------------------------------------\r\n\r\ntype FullCalendarInstance = InstanceType<typeof FullCalendar>\r\n\r\ninterface FullCalendarSecret {\r\n  calendar: Calendar\r\n  handleCustomRendering: (customRendering: CustomRendering<any>) => void\r\n  needCustomRenderingResize?: boolean\r\n}\r\n\r\n// storing internal state:\r\n// https://github.com/vuejs/vue/issues/1988#issuecomment-163013818\r\nfunction getSecret(inst: FullCalendarInstance): FullCalendarSecret {\r\n  return inst as any as FullCalendarSecret\r\n}\r\n\r\nfunction buildWatchers() {\r\n\r\n  let watchers: { [member: string]: any } = {\r\n\r\n    // watches changes of ALL options and their nested objects,\r\n    // but this is only a means to be notified of top-level non-complex options changes.\r\n    options: {\r\n      deep: true,\r\n      handler(this: FullCalendarInstance, options: CalendarOptions) {\r\n        let calendar = this.getApi()\r\n        calendar.pauseRendering()\r\n\r\n        let calendarOptions = this.buildOptions(options)\r\n        calendar.resetOptions(calendarOptions)\r\n\r\n        this.renderId++ // will queue a rerender\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let complexOptionName in OPTION_IS_COMPLEX) {\r\n\r\n    // handlers called when nested objects change\r\n    watchers[`options.${complexOptionName}`] = {\r\n      deep: true,\r\n      handler(this: FullCalendarInstance, val: any) {\r\n\r\n        // unfortunately the handler is called with undefined if new props were set, but the complex one wasn't ever set\r\n        if (val !== undefined) {\r\n\r\n          let calendar = this.getApi()\r\n          calendar.pauseRendering()\r\n          calendar.resetOptions({\r\n            [complexOptionName]: val\r\n          }, [complexOptionName])\r\n\r\n          this.renderId++ // will queue a rerender\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return watchers\r\n}\r\n\r\n// General Utils\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nfunction kebabToCamelKeys<V>(map: { [key: string]: V }): { [key: string]: V } {\r\n  const newMap: { [key: string]: V } = {}\r\n\r\n  for (const key in map) {\r\n    newMap[kebabToCamel(key)] = map[key]\r\n  }\r\n\r\n  return newMap\r\n}\r\n\r\nfunction kebabToCamel(s: string): string {\r\n  return s\r\n    .split('-')\r\n    .map((word, index) => index ? capitalize(word) : word)\r\n    .join('')\r\n}\r\n\r\nfunction capitalize(s: string): string {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n", "import FullCalendarComponent from './FullCalendar.js'\r\n\r\nexport default FullCalendarComponent\r\n"],
  "mappings": "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",
  "names": []
}
